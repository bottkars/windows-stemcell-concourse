resource_types:
- name: file-url
  type: docker-image
  source:
    repository: ((concourse-curl-resource.image-url))
    tag: latest

resources:
- name: windows-stemcell-concourse-image
  type: docker-image
  source:
    repository: ((windows-stemcell-concourse-image.image-url))
    tag: latest

- name: pipeline-resources
  type: git
  source:
    uri: ((tasks.uri))
    branch: ((tasks.branch))
    #username: ((tasks.username))
    #password: ((tasks.password))
    skip_ssl_verification: ((tasks.skip_ssl_verification))
  check_every: 1h

- name: stembuild-file
  type: file-url
  source:
    url: ((stembuild-file.url))
    filename: ((stembuild-file.file-name))

- name: lgpo
  type: file-url
  source:
    url: ((LGPO.url))
    filename: LGPO.zip

- name: autounattend
  type: git
  source:
    uri: ((tasks.uri))
    branch: ((tasks.branch))
    #username: ((tasks.username))
    #password: ((tasks.password))
    skip_ssl_verification: ((tasks.skip_ssl_verification))
  check_every: 1h

- name: stemcell-store
  type: s3
  source:
    access_key_id: ((s3.access-key-id))
    secret_access_key: ((s3.secret-access-key))
    bucket: ((s3.bucket))
    #versioned_file: stemcell/bosh-stemcell-2019.12-vsphere-esxi-windows2019-go_agent.tgz
    regexp: stemcell/bosh-stemcell-(.*)-vsphere-esxi-(.*)-go_agent.tgz
    endpoint: ((s3.endpoint))

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

vcenter-params: &vcenter-params
  vcenter_ca_certs: ((vcenter-ca-certs))
  vcenter_host: ((vcenter-host))
  vcenter_username: ((vcenter-username))
  vcenter_password: ((vcenter-password))
  vcenter_datacenter: ((vcenter-datacenter))

vm-params: &vm-params
  base_vm_name: ((base-vm-name))
  vm_folder: ((vm-folder))
  vm_datastore: ((vm-datastore))
  vm_host: ((vm-host))
  vm_cpu: ((vm-cpu))
  vm_network: ((vm-network))
  vm_disk_gb: ((vm-disk-gb))
  vm_memory_mb: ((vm-memory-mb))
  vm_guest_os_id: ((vm-guest-os-id))
  vm_net_adapter: ((vm-net-adapter))
  vm_resource_pool: ((vm-resource-pool))
  esxi_version: ((esxi-version))
  firmware_type: ((firmware-type))
  disk_controller_type: ((disk-controller-type))
  iso_datastore: ((iso-datastore))
  iso_path_in_datastore: ((iso-path-in-datastore))
  timeout: ((timeout))
  vmware_tools_status: ((vmware-tools-status))

os-params: &os-params
  operating_system_name: ((operating-system-name))
  product_key: ((product-key))
  ip_address: ((ip-address))
  subnet_mask: ((subnet-mask))
  language: ((language))
  gateway_address: ((gateway-address))
  dns_address: ((dns-address))
  admin_password: ((admin-password))
  vmware_tools_uri: ((vmware-tools-uri))
  windows_update_module_uri: ((windows-update-module-uri))
  windows_install_timeout: ((windows-install-timeout))

######################

jobs:
  - name: create-base
    serial: true
    serial_groups: [ base ]
    plan:
      - get: one-time-trigger
        trigger: true
      - get: windows-stemcell-concourse-image
      - get: pipeline-resources
      - get: autounattend
      - task: create-base
        file: pipeline-resources/tasks/create-base.yml
        image: windows-stemcell-concourse-image
        input_mapping:
          autounattend: autounattend
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params

  - name: update-base
    serial: true
    serial_groups: [ base ]
    plan:
      - get: one-time-trigger
        passed: [ create-base ]
      - get: windows-stemcell-concourse-image
      - get: pipeline-resources
      - get: stembuild-file
        trigger: true #start the pipeline whenever there is a new stembuild
      - task: update-base
        file: pipeline-resources/tasks/update-base.yml
        image: windows-stemcell-concourse-image
        input_mapping:
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params

  - name: clone-base
    serial: true
    plan:
      - get: windows-stemcell-concourse-image
      - get: pipeline-resources
        trigger: true
        passed: [update-base]
      - get: stembuild-file
        passed: [update-base]
      - task: clone-base
        file: pipeline-resources/tasks/clone-base.yml
        image: windows-stemcell-concourse-image
        input_mapping:
          stembuild: stembuild-file
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params

  - name: stembuild
    serial: true
    plan:
      - get: windows-stemcell-concourse-image
      - get: pipeline-resources
        trigger: true
        passed: [clone-base]
      - get: lgpo
      - get: stembuild-file
        passed: [clone-base]
      - task: construct
        file: pipeline-resources/tasks/construct.yml
        image: windows-stemcell-concourse-image
        input_mapping:
          stembuild: stembuild-file
          lgpo: lgpo
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params
      - task: package
        file: pipeline-resources/tasks/package.yml
        image: windows-stemcell-concourse-image
        input_mapping:
          stembuild: stembuild-file
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params
      - put: stemcell-store
        params:
          file: stemcell/*.tgz